resources:
  - name: docker_push_webhook_res
    type: IncomingWebhook
    configuration:
      webhookName: docker_push_iw
  - name: run_prop_deploy
    type: PropertyBag
    configuration:
      key1: value1
      key2: value2
  - name: run_prop_smoke
    type: PropertyBag
    configuration:
      key1: value1
      key2: value2
  - name: run_prop_integration
    type: PropertyBag
    configuration:
      key1: value1
      key2: value2
  - name: git_repo_integ_test
    type: GitRepo
    configuration:
      gitProvider: hk_github
      path: harshkumar1/deploy_integ_smoke

pipelines:
  - name: demo_test_env_deployment
    steps:
    - name: test_env_deploy
      type: Bash
      configuration:
        inputResources:
          - name: docker_push_webhook_res
        outputResources:
          - name: run_prop_deploy
      execution:
        onExecute:
          - echo "deploy"
          - sleep 5
          - set_run_name "V${run_number}.0.0"
        onSuccess:
          - write_output run_prop_deploy runNumber=${run_number}

  - name: demo_smoke_test
    steps:
    - name: smoketest
      type: Bash
      configuration:
        inputResources:
          - name: run_prop_deploy
        outputResources:
          - name: run_prop_smoke
      execution:
        onExecute:
          - echo "smoke_test"
          - sleep 3
          - set_run_name "V${run_number}.0.0"
        onSuccess:
          - write_output run_prop_smoke runNumber=${run_number}

  - name: demo_integration_test
    configuation:
      environmentVariables:
        readOnly:
          reportsCount: 10
          suitesCount: 10
    steps:
    - name: integration_test
      type: Bash 
      configuration:
        inputResources:
          - name: run_prop_smoke
        outputResources:
          - name: run_prop_integration
      execution:
        onExecute:
          - echo "smoke_test"
          - pushd $res_git_repo_integ_test_resourcePath
          - npm install
          - touch .env
          - echo "REPORTS_COUNT=$reportsCount" >> .env
          - echo "SUITES_COUNT=$suitesCount" >> .env
          - TOTAL_TESTS=$(($reportsCount*$suitesCount))
          # - update_run_description "Total tests => $TOTAL_TESTS"
          # - set_run_name $TOTAL_TESTS
          - npm run test
          - save_tests $res_testTrigger_resourcePath/
          - set_run_name "V${run_number}.0.0"
        onSuccess:
          - write_output run_prop_integration runNumber=${run_number}

  - name: demo_promote_artifacts
    steps:
    - name: promote_artifact
      type: Bash
      configuration:
        inputResources:
          - name: run_prop_integration
      execution:
        onExecute:
          - echo "promote artifacts"
          - sleep 2
          - set_run_name "V${run_number}.0.0"

  - name: demo_stag_env_deployment
    steps:
    - name: stag_env_deploy
      type: Bash
      configuration:
        inputResources:
          - name: run_prop_integration
      execution:
        onExecute:
          - echo "staging deployment"
          - sleep 10
          - set_run_name "V${run_number}.0.0"